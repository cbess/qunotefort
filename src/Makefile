#############################################################################
# Makefile for building: ../bin/qunotefort
# Generated by qmake (1.07a) (Qt 3.3.4) on: Sat Jan  7 01:12:51 2006
# Project:  src.pro
# Template: app
# Command: $(QMAKE) -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -m32 -march=i386 -mtune=pentium4 -fasynchronous-unwind-tables  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -m32 -march=i386 -mtune=pentium4 -fasynchronous-unwind-tables  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = main.h \
		ListBoxItem.h \
		Thread.h
SOURCES = qunotefort.cpp \
		main.cpp \
		ListBoxItem.cpp
OBJECTS = qunotefort.o \
		main.o \
		ListBoxItem.o \
		MainWin.o \
		TitleWin.o
FORMS = MainWin.ui \
		TitleWin.ui
UICDECLS = MainWin.h \
		TitleWin.h
UICIMPLS = MainWin.cpp \
		TitleWin.cpp
SRCMOC   = moc_main.cpp \
		moc_MainWin.cpp \
		moc_TitleWin.cpp
OBJMOC = moc_main.o \
		moc_MainWin.o \
		moc_TitleWin.o
DIST	   = src.pro
QMAKE_TARGET = qunotefort
DESTDIR  = ../bin/
TARGET   = ../bin/qunotefort

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	test -d ../bin/ || mkdir -p ../bin/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: src.pro  /usr/lib/qt-3.3/mkspecs/default/qmake.conf /usr/lib/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile src.pro
qmake: 
	@$(QMAKE) -o Makefile src.pro

dist: 
	@mkdir -p .tmp/qunotefort && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/qunotefort/ && $(COPY_FILE) --parents MainWin.ui.h TitleWin.ui.h .tmp/qunotefort/ && ( cd `dirname .tmp/qunotefort` && $(TAR) qunotefort.tar qunotefort && $(GZIP) qunotefort.tar ) && $(MOVE) `dirname .tmp/qunotefort`/qunotefort.tar.gz . && $(DEL_FILE) -r .tmp/qunotefort

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../bin/$(TARGET) $(TARGET)


FORCE:

####### Compile

qunotefort.o: qunotefort.cpp main.h \
		MainWin.h

main.o: main.cpp main.h \
		ListBoxItem.h \
		TitleWin.h \
		MainWin.h

ListBoxItem.o: ListBoxItem.cpp ListBoxItem.h

MainWin.h: MainWin.ui 
	$(UIC) MainWin.ui -o MainWin.h

MainWin.cpp: MainWin.h MainWin.ui MainWin.ui.h 
	$(UIC) MainWin.ui -i MainWin.h -o MainWin.cpp

TitleWin.h: TitleWin.ui 
	$(UIC) TitleWin.ui -o TitleWin.h

TitleWin.cpp: TitleWin.h TitleWin.ui TitleWin.ui.h 
	$(UIC) TitleWin.ui -i TitleWin.h -o TitleWin.cpp

MainWin.o: MainWin.cpp MainWin.ui.h \
		MainWin.h

TitleWin.o: TitleWin.cpp TitleWin.ui.h \
		TitleWin.h

moc_main.o: moc_main.cpp  main.h MainWin.h

moc_MainWin.o: moc_MainWin.cpp  MainWin.h 

moc_TitleWin.o: moc_TitleWin.cpp  TitleWin.h 

moc_main.cpp: $(MOC) main.h
	$(MOC) main.h -o moc_main.cpp

moc_MainWin.cpp: $(MOC) MainWin.h
	$(MOC) MainWin.h -o moc_MainWin.cpp

moc_TitleWin.cpp: $(MOC) TitleWin.h
	$(MOC) TitleWin.h -o moc_TitleWin.cpp

####### Install

install:  

uninstall:  

